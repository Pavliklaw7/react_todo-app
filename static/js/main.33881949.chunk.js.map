{"version":3,"sources":["components/AddTodo.js","context.js","components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","components/TodoFooter.js","App.js","index.js"],"names":["AddTodo","onCreate","input","defvalue","useState","value","setValue","bind","onChange","event","target","clear","useInputValue","onSubmit","preventDefault","trim","type","className","placeholder","Context","React","createContext","TodoItem","todo","filter","toggleAll","removeTodo","useContext","completed","setCompleted","classes","useEffect","push","join","hidden","showTodo","id","checked","title","onClick","TodoList","todos","onToggle","htmlFor","map","key","TodosFilter","filterChange","href","name","TodoFooter","uncompletedTodos","removeCompletedTodos","console","log","App","setTodos","setFilter","setToggleAll","setUncompletedTodos","uncompleteTodos","useCallback","Provider","length","fillterChange","concat","Date","now","changeToggle","index","findIndex","updatedTodos","changeTodoTitle","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33881949.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction useInputValue(defvalue) {\n  const [value, setValue] = useState(defvalue);\n\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value),\n    },\n\n    clear: () => setValue(''),\n    value: () => value,\n  };\n}\n\nfunction AddTodo({ onCreate }) {\n  const input = useInputValue('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (input.value().trim()) {\n      onCreate(input.value());\n      input.clear();\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        {...input.bind}\n      />\n    </form>\n  );\n}\n\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n\nexport default AddTodo;\n","import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\n\nfunction TodoItem({ todo, onChange, filter, toggleAll }) {\n  const { removeTodo } = useContext(Context);\n  const [completed, setCompleted] = useState(todo.completed);\n\n  const classes = [];\n\n  useEffect(() => {\n    setCompleted(toggleAll);\n  }, [toggleAll]);\n\n  if (todo.completed) {\n    classes.push('completed');\n  }\n\n  function showTodo() {\n    switch (filter) {\n      case 'Completed':\n        return !completed;\n      case 'Active':\n        return completed;\n      default:\n        return false;\n    }\n  }\n\n  return (\n    <li\n      className={classes.join('')}\n      hidden={showTodo()}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => onChange(todo.id)}\n          checked={todo.completed}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => removeTodo(todo.id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  toggleAll: PropTypes.bool.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, onToggle, filter, toggleAll }) {\n  return (\n    <section className=\"main\">\n      <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n            onChange={onToggle}\n            filter={filter}\n            toggleAll={toggleAll}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  onToggle: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  toggleAll: PropTypes.bool.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodosFilter({ filterChange, filter }) {\n  return (\n    <>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === 'All' ? 'selected' : ''}\n            name=\"All\"\n            onClick={filterChange}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={filter === 'Active' ? 'selected' : ''}\n            name=\"Active\"\n            onClick={filterChange}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={filter === 'Completed' ? 'selected' : ''}\n            name=\"Completed\"\n            onClick={filterChange}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nTodosFilter.propTypes = {\n  filterChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport TodosFilter from './TodosFilter';\n\nfunction TodoFooter({ uncompletedTodos, filter }) {\n  const { removeCompletedTodos, filterChange } = useContext(Context);\n\n  // eslint-disable-next-line no-console\n  console.log(filter);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${uncompletedTodos} items left`}\n      </span>\n\n      <TodosFilter filterChange={() => filterChange} filter={filter} />\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => removeCompletedTodos()}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nTodoFooter.propTypes = {\n  uncompletedTodos: PropTypes.number.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default TodoFooter;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport AddTodo from './components/AddTodo';\nimport TodoList from './components/TodoList';\nimport TodoFooter from './components/TodoFooter';\nimport Context from './context';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const [toggleAll, setToggleAll] = useState(false);\n  const [uncompletedTodos, setUncompletedTodos] = useState([]);\n\n  useEffect(() => {\n    const uncompleteTodos = todos.filter(todo => !todo.completed);\n\n    setUncompletedTodos(uncompleteTodos);\n  }, [todos, toggleAll]);\n\n  function fillterChange(event) {\n    setFilter(event.target.name);\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ]),\n    );\n    setUncompletedTodos(todos);\n  }\n\n  const changeTodoTitle = (id, title) => {\n    const index = todos.findIndex(todo => todo.id === id);\n    const updatedTodos = [...todos];\n\n    updatedTodos[index].title = title;\n    setTodos(updatedTodos);\n  };\n\n  const changeToggle = (id, completed) => {\n    const index = todos.findIndex(todo => todo.id === id);\n    const updatedTodos = [...todos];\n\n    updatedTodos[index].completed = completed;\n    setTodos(updatedTodos);\n  };\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n    setUncompletedTodos(todos.length);\n  }\n\n  const removeCompletedTodos = useCallback(() => {\n    setTodos(todos.filter(todo => todo.completed === false));\n    setToggleAll(false);\n  }, [todos]);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      }),\n    );\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        removeTodo,\n        removeCompletedTodos,\n        fillterChange,\n      }}\n    >\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <AddTodo onCreate={addTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={() => {\n              setToggleAll(!toggleAll);\n            }}\n          />\n          <label>Mark all as complete</label>\n          <TodoList\n            todos={todos}\n            changeToggle={changeToggle}\n            onToggle={toggleTodo}\n            filter={filter}\n            toggleAll={toggleAll}\n            changeTodoTitle={changeTodoTitle}\n          />\n        </section>\n        {todos.length ? (\n          <TodoFooter\n            uncompletedTodos={uncompletedTodos.length}\n            filter={filter}\n          />\n        ) : null}\n      </section>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nconst app = (\n  <App />\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}